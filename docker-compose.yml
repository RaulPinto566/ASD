version: '3.8'

services:

  dbpostgres:
    container_name: dbpostgres
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kafka-net

  pgadmin-compose:
    container_name: pgadmin-compose
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "PgAdmin2019!"
    ports:
      - "16543:80"
    depends_on:
      - dbpostgres
    networks:
      - kafka-net
  
  eureka:
    container_name: eureka
    build:
      context: ./Eureka
    ports:
      - "8761:8761"
    networks:
      - kafka-net

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - kafka-net
    depends_on:
      - zookeeper

  vue:
    container_name: vue
    build:
      context: ./Vue
    ports:
      - "8083:8083"
    networks:
      - kafka-net
    depends_on:
      - eureka
      - dbpostgres
  
  stock:
    container_name: stock
    build:
      context: ./Stock
    ports:
      - "8081:8081"
    networks:
      - kafka-net
    depends_on:
      - eureka
      - dbpostgres
  
  saga:
    container_name: saga
    build:
      context: ./Saga
    ports:
      - "8086:8086"
    networks:
      - kafka-net
    depends_on:
      - eureka
      - dbpostgres
  
  gateway:
    container_name: gateway
    build:
      context: ./Gateway
    ports:
      - "8085:8085"
    networks:
      - kafka-net
    depends_on:
      - eureka
      - dbpostgres

  centrovac:
    container_name: centrovac
    build:
      context: ./Centrovac
    ports:
      - "8080:8080"
    networks:
      - kafka-net
    depends_on:
      - eureka
      - dbpostgres

  utilizador:
    container_name: utilizador
    build:
      context: ./Utilizador
    ports:
      - "8082:8082"
    networks:
      - kafka-net
    depends_on:
      - eureka
      - dbpostgres

networks:
  kafka-net:
    driver: bridge